## set_facts.yml used to set vars between small differences in hardware
---
- name: "Get motherboard model"
  shell: dmidecode -s baseboard-product-name
  ignore_errors: yes
  register: motherboard

# newer wifi cards may not work by default, need to sent interface number
- name: "Get new wifi card if exists"
  shell: lspci | grep -q 24fb
  ignore_errors: yes
  register: wificard

- name: "Get Processor Architecture"
  shell: uname -m
  ignore_errors: yes
  register: proc_arch

- name: "Get Processor Model"
  shell: dmidecode | grep Intel | grep Version | awk '{ print $4 }' | head -c 4 | tail -c 1
  ignore_errors: yes
  register: cpu_model

- name: "Get connected Microphone"
  shell: pactl list sources | grep .usb | grep Name | awk '{ print $2 }' |  grep -v Webcam
  become: true
  become_user: "{{ ca_username }}"
  ignore_errors: yes
  register: connected_mic

- name: "Get Webcam Microphone"
  shell: pactl list sources | grep .usb | grep Name | awk '{ print $2 }' |  grep Webcam
  become: true
  become_user: "{{ ca_username }}"
  ignore_errors: yes
  register: connected_webcam_mic

# Custom PC. Note has multiple card readers so hd4 used
- name: setting fact Large custom PC CA
  set_fact:
    legacy: False
    partnum: "3"
    partedline: "2"
    isobootpart: "hd4,gpt3"
    mb: "{{ motherboard.stdout }}"
    cpu: "{{ cpu_model.stdout }}"
    nagios_temp_sensor: '"Core 0"'
    GC_encoder: "x264enc quantizer=22 speed-preset=2"
    GC_encoder_high: "x264enc pass=5 quantizer=17 bitrate=5120"
    opencl: nvidia
  when: motherboard.stdout == 'Z97-PRO GAMER'

# HP desktop machine note uses another audio hardware
- name: setting fact Large HP PC
  set_fact:
    legacy: False
    partnum: "3"
    partedline: "2"
    isobootpart: "hd0,gpt3"
    mb: "{{ motherboard.stdout }}"
    cpu: "{{ cpu_model.stdout }}"
    GC_line_in_source: default
    nagios_temp_sensor: '"Core 0"'
    GC_encoder: "x264enc quantizer=22 speed-preset=2"
    GC_encoder_high: "x264enc pass=5 quantizer=17 bitrate=5120"
    opencl: nvidia
  when: motherboard.stdout in ['8053']

# i7 mini-itx CAs
- name: setting fact i7 CA
  set_fact:
    legacy: False
    partnum: "3"
    partedline: "2"
    isobootpart: "hd0,gpt3"
    mb: "{{ motherboard.stdout }}"
    cpu: "{{ cpu_model.stdout }}"
    GC_line_in_source: default
    nagios_temp_sensor: '"Core 0"'
    nagios_temp_warn: 85
    nagios_temp_crit: 91
    opencl: intel
    nic_number: "{{ 2 if wificard.rc == 0 else 3 }}"
  when: motherboard.stdout in ['H170M-ITX/ac', 'H270M-ITX/ac']

- name: setting fact MINI-ITX CA
  set_fact:
    legacy: True
    partnum: "2"
    partedline: "1"
    isobootpart: "hd0,2"
    mb: "{{ motherboard.stdout }}"
    cpu: "{{ cpu_model.stdout }}"
  when: motherboard.stdout in ['H77N-WIFI', 'H87N-WIFI','H97N-WIFI']

# Generic CA
- name: setting facts for Generic CA
  set_fact:
    legacy: False
    partnum: "3"
    partedline: "2"
    isobootpart: "hd0,gpt3"
    mb: "{{ motherboard.stdout }}"
    cpu: "{{ cpu_model.stdout }}"
    GC_line_in_source: default
    nagios_temp_sensor: '"Core 0"'
    nagios_temp_warn: 85
    nagios_temp_crit: 91
    opencl: intel
    nic_number: "{{ 2 if wificard.rc == 0 else 3 }}"
  when: motherboard.stdout not in ['H170M-ITX/ac', 'H270M-ITX/ac', 'H77N-WIFI', 'H87N-WIFI','H97N-WIFI', '8053', 'Z97-PRO GAMER']

- name: setting facts for USB MICS
  set_fact:
    GC_failovermic_source: "{{ connected_mic.stdout }}"
    GC_usb_mic_source: "{{ connected_mic.stdout }}"
  when: connected_mic.stdout != ''

- name: setting facts for Webcam MICS
  set_fact:
    GC_usb_camera_mic_source: "{{ connected_webcam_mic.stdout }}"
    GC_failovermic_source: "{{ connected_webcam_mic.stdout }}"
  when: connected_webcam_mic.stdout != ''

- name: "If Staging, Set Peakaboo Server"
  set_fact:
    peakaboo_meteor: "{{ peakaboo_staging_meteor }}"
    peakaboo_http: "{{ peakaboo_staging_http }}"
  when: deploy_environment is defined and deploy_environment == 'staging'
  tags:
          - galicaster
          - galicaster_config
          - peakaboo
          - ddp

- name: setting user interactive facts
  set_fact:
    workflow_params: 'archiveOp:true;publishHarvesting:true;trimHold:{{oc_trim_default | lower}};emailAddresses:{{ oc_default_email }};videoPreview:true;usePublicStore:{{ vl_public }}'
  when:
    - CA_interactive
    - not vl_private_ep_acl
- debug: msg="{{ rtp_ip }}"
- name: setting user interactive facts
  set_fact:
    workflow_params: 'archiveOp:true;publishHarvesting:true;trimHold:{{oc_trim_default | lower}};emailAddresses:{{ oc_default_email }};videoPreview:true;usePublicStore:{{ vl_public }};addEpisodeAcl:true;aclRoles:{{ vl_private_ep_acl }}'
  when:
    - CA_interactive
    - vl_private_ep_acl is defined

# - debug: msg="{{ ansible_interfaces }}"
# - debug: msg="{{ GC_failovermic_source }}"
# - debug: msg="{{ connected_mic.stdout }}"
# - debug: msg="{{ GC_profilefailover_device }}"
