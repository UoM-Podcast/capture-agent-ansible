## capture-agent-end/tasks
---
- name:  do a hard reboot when drivers updated
  shell: echo 'RTC shutdown for driver update'
  when:
    - DP_driver
    - datapath_driver_installed.stdout is defined
    - datapath_driver_installed.stdout | search("Flash requires upgrading, please wait")
  notify:
    - restart galicaster
    - Remove any rtc wakeup Schedule
    - Set hwclock to 10 mins to RTC boot time
    - Schedule host restart after a minute
    - Shutdown host
    - Wait for host to restart
  tags:
          - datapath
          - datapath_driver
          - finalising

- name:  do forced hard reboot
  shell: echo 'RTC shutdown for driver update'
  when:
    - do_hard_reboot|default(false)
  notify:
    - restart galicaster
    - Remove any rtc wakeup Schedule
    - Set hwclock to 10 mins to RTC boot time
    - Schedule host restart after a minute
    - Shutdown host
    - Wait for host to restart
  tags:
          - hard_reboot
          - finalising

- name:  Make sure time is correct
  shell: echo 'fix time after driver update'
  notify:
    - Stop ntp
    - Set local time by ntpdate
    - Start ntp
  tags:
          - hard_reboot
          - finalising

- name:  Soft reboot when triggered
  shell: echo 'restarting after a change'
  when: blinkstick_udev.changed or ( kernel_update is defined and kernel_update.changed)
  notify:
    - Restart host
    - Short Wait for host to restart
  tags:
          - soft_reboot
          - finalising
          - galicaster

- name:  kernel update reinstall datapath
  shell: echo 'new kernel installed, re installing datapath driver'
  notify:
    - reinstall datapath kernel driver
    - restart galicaster
  when: reinstall_dp|default(false) or (kernel_update is defined and kernel_update.changed and DP_driver)
  tags:
          - kernel
          - apt
          - apt_update
          - datapath

- name: Restart host
  shell: sleep 2 && shutdown -r now "Reboot triggered by Ansible"
  async: 1
  poll: 0
  ignore_errors: true
  when: ansible_connection != "local" and datapath_driver is defined and datapath_driver.changed

- name: Short Wait for host to restart
  when: datapath_driver is defined and datapath_driver.changed
  local_action: >
    wait_for
    host={{ ansible_ssh_host }}
    port={{ ansible_ssh_port }}
    delay=90
    timeout=800

- name: Forced host reboot
  shell: sleep 2 && shutdown -r now "Reboot triggered by Ansible"
  async: 1
  poll: 0
  ignore_errors: true
  when: force_reboot|default(false)
  tags:
          - kernel
          - apt
          - apt_update
          - datapath

- name: Short Wait after forced host reboot
  when: force_reboot|default(false)
  local_action: >
    wait_for
    host={{ ansible_ssh_host }}
    port={{ ansible_ssh_port }}
    delay=90
    timeout=800
  tags:
          - kernel
          - apt
          - apt_update
          - datapath
